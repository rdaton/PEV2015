package individuo;

public  class Individuo_basico extends Individuo{

	//==========================================
	//============= CONSTRUCTORA ===============
	//==========================================

	public Individuo_basico() { }

	public Individuo_basico(Object x_min, Object x_max, double prec) {
		super(x_min, x_max, prec);
		Gen gen;
		for(int i=0;i<lcrom;i++) {
			gen = new Gen_f1((Math.random()<0.5) ? 0 : 1);
			genes.add(gen);
		}
		decod();
		adaptacion_bruta = calculaadaptacion_bruta();
	}

	// =========================
	// == METODOS PUBLICOS
	// =========================

	public Individuo_basico newInstance(Object x_min, Object x_max,double prec) {
		Individuo_basico unIndividuo = new Individuo_basico(x_min, x_max, prec);
		return unIndividuo;
    }

	public Individuo clone_aux(Object x_min, Object x_max, double prec) {
		Individuo unIndividuo = new Individuo_basico (x_min, x_max, prec);
		return unIndividuo;
	}

	double miFuncion(Object un_valor) {
		double valor = (Double) un_valor;
		double res = 0;
		res = Math.sqrt(Math.abs(valor));
		double unSin = Math.sin(res);
		res = valor*unSin;
		res = Math.abs(res);
		return -res;
	}

	void decod() {
		Double x = (Double) this.x;		
		x = (double)((double)bin_ent()[0]/(double)(Math.pow(2, lcrom)-1));
		x*= ((Double[]) x_max)[0] - ((Double[]) x_min)[0];
		x+= ((Double[]) x_min)[0];
		this.x=x;
		System.out.println(x);
	}

	int[] bin_ent() {
		int[] nums = new int[1];
		nums[0] = 0;
		int pot = 1;
		//for (int i=0;i<lcrom;i++) {
		for(int i=lcrom-1;i>=0;i--) {
			nums[0] += pot*((Integer)genes.get(lcrom-i-1).toInt());
			pot = pot*2;
		}
		return nums;
	}

	public Integer tamGen(Object x_min, Object x_max, double prec) {
		Integer unTamanyo = logica.Calculadora.tamGen(((Double[])x_min)[0], ((Double[])x_max)[0], prec);
		return unTamanyo;
	};

	@Override
	public String toString() {
		StringBuffer unBuffer = new StringBuffer();
		decod();
		//unBuffer.append(x).append(";  ");
		unBuffer.append(this.adaptacion_bruta);//.append(';');
		return unBuffer.toString();
	}

}
